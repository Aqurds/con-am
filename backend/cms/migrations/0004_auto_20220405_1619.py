# Generated by Django 2.2.27 on 2022-04-05 16:19

import json
from pathlib import Path

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import home.utils
import wagtail.core.fields


def add_regions_initial_values(apps, schema_editor):
    path = Path(settings.BASE_DIR + "/cms/fixtures/regions.json")

    with path.open() as data_file:
        json_file = json.load(data_file)

    Region = apps.get_model("cms", "Region")

    for region in json_file:
        name = region.get("fields").get("name")
        Region.objects.create(name=name)


def add_feaured_resource_center_products(apps, schema_editor):
    path = Path(
        settings.BASE_DIR + "/cms/fixtures/featured_resource_center_products.json"
    )

    with path.open() as data_file:
        json_file = json.load(data_file)

    FeaturedResourceCenterProduct = apps.get_model(
        "cms", "FeaturedResourceCenterProduct"
    )

    for contact_person in json_file:
        name = contact_person.get("fields").get("name")
        description = contact_person.get("fields").get("description")
        footer_text = contact_person.get("fields").get("footer_text")
        url = contact_person.get("fields").get("url")
        is_subscription = contact_person.get("fields").get("is_subscription")
        subscription_link = contact_person.get("fields").get("subscription_link")
        FeaturedResourceCenterProduct.objects.create(
            name=name,
            description=description,
            footer_text=footer_text,
            url=url,
            is_subscription=is_subscription,
            subscription_link=subscription_link,
        )


class Migration(migrations.Migration):

    dependencies = [
        ("cms", "0003_gregmundisinitiative_initiatives_section"),
    ]

    operations = [
        migrations.CreateModel(
            name="FeaturedResourceCenterProduct",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the featured product",
                        max_length=100,
                        verbose_name="Name",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        help_text="Image of the featured product",
                        null=True,
                        upload_to=home.utils.get_upload_path,
                        verbose_name="Image",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        help_text="Description and price of the featured product",
                        max_length=100,
                        null=True,
                        verbose_name="Price Text",
                    ),
                ),
                (
                    "footer_text",
                    models.CharField(
                        blank=True,
                        help_text="Footer text of the featured product",
                        max_length=100,
                        null=True,
                        verbose_name="Footer Text",
                    ),
                ),
                (
                    "url",
                    models.CharField(
                        blank=True,
                        help_text="URL of the store",
                        max_length=150,
                        null=True,
                        verbose_name="URL",
                    ),
                ),
                (
                    "is_subscription",
                    models.BooleanField(
                        default=False,
                        help_text="Determines whether the product is a subscription-based product or not",
                        verbose_name="Is Subscription",
                    ),
                ),
                (
                    "subscription_link",
                    models.CharField(
                        blank=True,
                        help_text="Link to the subscription-based product",
                        max_length=150,
                        null=True,
                        verbose_name="Subscription URL",
                    ),
                ),
            ],
            options={
                "verbose_name": "Reatured Resource Center Product",
                "verbose_name_plural": "Reatured Resource Center Products",
            },
        ),
        migrations.CreateModel(
            name="Region",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Name of the region",
                        max_length=100,
                        null=True,
                        verbose_name="Name",
                    ),
                ),
            ],
            options={
                "verbose_name": "Region",
                "verbose_name_plural": "Regions",
            },
        ),
        migrations.AlterField(
            model_name="contactinformation",
            name="address1",
            field=models.CharField(
                blank=True,
                help_text="First line of the company address to be displayed in the page",
                max_length=50,
                null=True,
                verbose_name="Address 1",
            ),
        ),
        migrations.AlterField(
            model_name="contactinformation",
            name="address2",
            field=models.CharField(
                blank=True,
                help_text="Second line of the company address to be displayed in the page",
                max_length=50,
                null=True,
                verbose_name="Address 2",
            ),
        ),
        migrations.AlterField(
            model_name="contactinformation",
            name="company_name",
            field=models.CharField(
                blank=True,
                help_text="Company name to be displayed in the page",
                max_length=50,
                null=True,
                verbose_name="Company Name",
            ),
        ),
        migrations.AlterField(
            model_name="contactinformation",
            name="contact_persons",
            field=models.ManyToManyField(
                help_text="Contact persons to be displayed in the page",
                related_name="contact_persons",
                to="cms.ContactPerson",
                verbose_name="Contact Persons",
            ),
        ),
        migrations.AlterField(
            model_name="contactinformation",
            name="phone_number",
            field=models.CharField(
                blank=True,
                help_text="Phone number to be displayed in the page",
                max_length=50,
                null=True,
                verbose_name="Phone Number",
            ),
        ),
        migrations.AlterField(
            model_name="contactperson",
            name="email_address",
            field=models.EmailField(
                blank=True,
                help_text="Email address of the contact person",
                max_length=254,
                verbose_name="Email Address",
            ),
        ),
        migrations.AlterField(
            model_name="contactperson",
            name="name",
            field=models.CharField(
                blank=True,
                help_text="Name of the contact person",
                max_length=50,
                null=True,
                verbose_name="Name",
            ),
        ),
        migrations.AlterField(
            model_name="contactperson",
            name="position",
            field=models.CharField(
                blank=True,
                help_text="Position of the contact peron in the company",
                max_length=50,
                null=True,
                verbose_name="Position",
            ),
        ),
        migrations.AlterField(
            model_name="gregmundisinitiative",
            name="contact_info_title",
            field=models.CharField(
                blank=True,
                help_text="Contact Info Title",
                max_length=100,
                null=True,
                verbose_name="Contact Info Title",
            ),
        ),
        migrations.AlterField(
            model_name="gregmundisinitiative",
            name="greg_mundis_company",
            field=models.CharField(
                blank=True,
                help_text="Company of Greg Mundis displayed",
                max_length=50,
                null=True,
                verbose_name="Greg Mundis Company",
            ),
        ),
        migrations.AlterField(
            model_name="gregmundisinitiative",
            name="greg_mundis_description",
            field=wagtail.core.fields.RichTextField(
                blank=True,
                help_text="Description under Greg Mundis name and title",
                null=True,
                verbose_name="Greg Mundis Description",
            ),
        ),
        migrations.AlterField(
            model_name="gregmundisinitiative",
            name="greg_mundis_image",
            field=models.ForeignKey(
                blank=True,
                help_text="Greg Mundis Image",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="wagtailimages.Image",
                verbose_name="Greg Mundis Image",
            ),
        ),
        migrations.AlterField(
            model_name="gregmundisinitiative",
            name="greg_mundis_name",
            field=models.CharField(
                blank=True,
                help_text="Name of Greg Mundis displayed",
                max_length=50,
                null=True,
                verbose_name="Greg Mundis Name",
            ),
        ),
        migrations.AlterField(
            model_name="gregmundisinitiative",
            name="greg_mundis_position",
            field=models.CharField(
                blank=True,
                help_text="Title of Greg Mundis displayed",
                max_length=50,
                null=True,
                verbose_name="Greg Mundis Position",
            ),
        ),
        migrations.RunPython(add_regions_initial_values, migrations.RunPython.noop),
        migrations.RunPython(
            add_feaured_resource_center_products, migrations.RunPython.noop
        ),
    ]
